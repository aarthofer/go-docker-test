name: Docker Image CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

     - name: Set up Go 1.x
       uses: actions/setup-go@v2
       with:
         go-version: ^1.15
       id: go

     - name: Check out code into the Go module directory
       uses: actions/checkout@v2

     - name: Install golang-migrate
       run: |
        curl -L https://github.com/golang-migrate/migrate/releases/download/v4.12.2/migrate.linux-amd64.tar.gz | tar xvz
        sudo mv migrate.linux-amd64 /usr/bin/migrate
        which migrate

     - name: Test
       run: go test -v

     - name: Login
       run: docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_TOKEN }}
      
     - name: Build
       run: docker image build -f ./Dockerfile -t ${{ secrets.DOCKERHUB_USERNAME }}/my-firstimage:0.0.1 ./

     - name: Run Trivy vulnerability scanner
       uses: aquasecurity/trivy-action@master
       with:
          image-ref: '${{ secrets.DOCKERHUB_USERNAME }}/my-firstimage:0.0.1'
          format: 'sarif'
          output: 'trivy-results.sarif'

     - name: Upload Trivy scan results to GitHub Security tab
       uses: github/codeql-action/upload-sarif@v1
       with:
         sarif_file: 'trivy-results.sarif'

     - name: Run Trivy vulnerability scanner in IaC mode
       uses: aquasecurity/trivy-action@master
       with:
          scan-type: 'config'
          hide-progress: false
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

     - name: Upload Trivy scan results to GitHub Security tab
       uses: github/codeql-action/upload-sarif@v1
       with:
          sarif_file: 'trivy-results.sarif'

     - name: Tag image
       env:
         GIT_HASH: $(git rev-parse --short "$GITHUB_SHA")
       run: docker tag ${{ secrets.DOCKERHUB_USERNAME }}/my-firstimage:0.0.1 ${{ secrets.DOCKERHUB_USERNAME }}/my-firstimage:${{ env.GIT_HASH }}
      
     - name: publish
       env:
         GIT_HASH: $(git rev-parse --short "$GITHUB_SHA")
       run: docker image push ${{ secrets.DOCKERHUB_USERNAME }}/my-firstimage:0.0.1 | docker image push ${{ secrets.DOCKERHUB_USERNAME }}/my-firstimage:${{ env.GIT_HASH }}
